//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CallPlan2015.Service
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CallCardEntities2 : DbContext
    {
        public CallCardEntities2()
            : base("name=CallCardEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserCallPLan> UserCallPLans { get; set; }
        public virtual DbSet<zcmimsoh> zcmimsohs { get; set; }
        public virtual DbSet<ZCPLD> ZCPLDs { get; set; }
        public virtual DbSet<ZGOVHOSP2> ZGOVHOSP2 { get; set; }
        public virtual DbSet<zsa756pf> zsa756pf { get; set; }
        public virtual DbSet<zsa757pf> zsa757pf { get; set; }
        public virtual DbSet<zsa757pf3> zsa757pf3 { get; set; }
        public virtual DbSet<zsa758pf> zsa758pf { get; set; }
        public virtual DbSet<CallCardReport> CallCardReports { get; set; }
        public virtual DbSet<temp> temps { get; set; }
        public virtual DbSet<zlvl> zlvls { get; set; }
    
        public virtual int COUNT_SC_CHECKED_CUST_BY_DATE(string sLSMN, Nullable<int> cPLUPD, string cUST)
        {
            var sLSMNParameter = sLSMN != null ?
                new ObjectParameter("SLSMN", sLSMN) :
                new ObjectParameter("SLSMN", typeof(string));

            var cPLUPDParameter = cPLUPD.HasValue ?
                new ObjectParameter("CPLUPD", cPLUPD) :
                new ObjectParameter("CPLUPD", typeof(int));

            var cUSTParameter = cUST != null ?
                new ObjectParameter("CUST", cUST) :
                new ObjectParameter("CUST", typeof(string));

            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COUNT_SC_CHECKED_CUST_BY_DATE", sLSMNParameter, cPLUPDParameter, cUSTParameter);
        }
    
        public virtual ObjectResult<GetListScChecked_Result> GetListScChecked(string sLSMN, Nullable<int> cPLUPD)
        {
            var sLSMNParameter = sLSMN != null ?
                new ObjectParameter("SLSMN", sLSMN) :
                new ObjectParameter("SLSMN", typeof(string));
    
            var cPLUPDParameter = cPLUPD.HasValue ?
                new ObjectParameter("CPLUPD", cPLUPD) :
                new ObjectParameter("CPLUPD", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListScChecked_Result>("GetListScChecked", sLSMNParameter, cPLUPDParameter);
        }
    }
}
